name: Pull Request Automatic Review

# This workflow automatically lables PR to ensure that all PR's are correct within the release draft.

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  awaitCheck:
    runs-on: ubuntu-latest
    steps:
      # This step will retry until required check passes
      # and will fail the whole workflow if the check conclusion is not a success
      - name: Wait on Pull Labeler checks
        uses: lewagon/wait-on-check-action@v0.1-beta.2
        with:
          ref: ${{github.sha}} # can be commit SHA or tag too
          check-name: Pull Labeler
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20 # seconds

  # Jest Testing
  jest:
    runs-on: ubuntu-latest
    steps:
      - name: Get Configurations
        uses: Videndum/manage-github-secrets@1.0.0-beta
        with:
          settings: ${{ secrets.SETTINGS }}
          mode: 'environment'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: npm i
      - name: Comment with Test Coverage
        if: ${{env.jest_enabled}} == true
        uses: dkershner6/jest-coverage-commenter-action@v1
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          test_command: 'npm run test:coverage'

  # Automatically approves
  conflictCheck:
    name: Pull Request Conflict Check
    needs:
      - awaitCheck
    runs-on: ubuntu-latest
    steps:
      - name: Get Configurations
        uses: Videndum/manage-github-secrets@1.0.0-beta
        with:
          settings: ${{ secrets.SETTINGS }}
          mode: 'environment'
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2.3.1
      - name: Warn potential conflicts
        uses: wktk/conflibot@v1
        if: ${{env.conflict_pull}} == true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: check if prs are dirty
        if: ${{env.conflict_master}} == true
        uses: eps1lon/actions-label-merge-conflict@releases/1.x
        with:
          dirtyLabel: ${{env.conflict_dirty}}
          repoToken: ${{ secrets.GITHUB_TOKEN }}

  approval:
    needs:
      - conflictCheck
    runs-on: ubuntu-latest
    steps:
      - name: Get Configurations
        uses: Videndum/manage-github-secrets@1.0.0-beta
        with:
          settings: ${{ secrets.SETTINGS }}
          mode: 'environment'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Automatically approve
        uses: hmarr/auto-approve-action@v2.0.0
        if: (${{env.approve_enabled}} == true && contains(${{env.auto_whitelist}}, github.actor) || ${{env.approve_enabled}} == true && github.actor == github.repository_owner )
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

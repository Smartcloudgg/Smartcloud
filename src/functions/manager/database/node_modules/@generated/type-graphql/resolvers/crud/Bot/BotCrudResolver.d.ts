import { GraphQLResolveInfo } from "graphql";
import { AggregateBotArgs } from "./args/AggregateBotArgs";
import { CreateBotArgs } from "./args/CreateBotArgs";
import { DeleteBotArgs } from "./args/DeleteBotArgs";
import { DeleteManyBotArgs } from "./args/DeleteManyBotArgs";
import { FindFirstBotArgs } from "./args/FindFirstBotArgs";
import { FindManyBotArgs } from "./args/FindManyBotArgs";
import { FindUniqueBotArgs } from "./args/FindUniqueBotArgs";
import { UpdateBotArgs } from "./args/UpdateBotArgs";
import { UpdateManyBotArgs } from "./args/UpdateManyBotArgs";
import { UpsertBotArgs } from "./args/UpsertBotArgs";
import { Bot } from "../../../models/Bot";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateBot } from "../../outputs/AggregateBot";
export declare class BotCrudResolver {
    bot(ctx: any, args: FindUniqueBotArgs): Promise<Bot | null>;
    findFirstBot(ctx: any, args: FindFirstBotArgs): Promise<Bot | null>;
    bots(ctx: any, args: FindManyBotArgs): Promise<Bot[]>;
    createBot(ctx: any, args: CreateBotArgs): Promise<Bot>;
    deleteBot(ctx: any, args: DeleteBotArgs): Promise<Bot | null>;
    updateBot(ctx: any, args: UpdateBotArgs): Promise<Bot | null>;
    deleteManyBot(ctx: any, args: DeleteManyBotArgs): Promise<AffectedRowsOutput>;
    updateManyBot(ctx: any, args: UpdateManyBotArgs): Promise<AffectedRowsOutput>;
    upsertBot(ctx: any, args: UpsertBotArgs): Promise<Bot>;
    aggregateBot(ctx: any, info: GraphQLResolveInfo, args: AggregateBotArgs): Promise<AggregateBot>;
}

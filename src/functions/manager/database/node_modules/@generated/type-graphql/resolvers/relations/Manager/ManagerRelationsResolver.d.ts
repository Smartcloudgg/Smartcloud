import { Manager } from "../../../models/Manager";
import { Transaction } from "../../../models/Transaction";
import { User } from "../../../models/User";
import { ManagerChildManagersArgs } from "./args/ManagerChildManagersArgs";
import { ManagerManager_AArgs } from "./args/ManagerManager_AArgs";
import { ManagerManager_BArgs } from "./args/ManagerManager_BArgs";
import { ManagerTransactionArgs } from "./args/ManagerTransactionArgs";
export declare class ManagerRelationsResolver {
    owner(manager: Manager, ctx: any): Promise<User>;
    parentManager(manager: Manager, ctx: any): Promise<Manager | null>;
    childManagers(manager: Manager, ctx: any, args: ManagerChildManagersArgs): Promise<Manager[]>;
    transaction(manager: Manager, ctx: any, args: ManagerTransactionArgs): Promise<Transaction[]>;
    Manager_B(manager: Manager, ctx: any, args: ManagerManager_BArgs): Promise<Manager[]>;
    Manager_A(manager: Manager, ctx: any, args: ManagerManager_AArgs): Promise<Manager[]>;
}

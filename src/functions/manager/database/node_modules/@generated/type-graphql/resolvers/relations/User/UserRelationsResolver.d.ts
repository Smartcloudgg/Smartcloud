import { Action } from "../../../models/Action";
import { Bot } from "../../../models/Bot";
import { Command } from "../../../models/Command";
import { DiscordUser } from "../../../models/DiscordUser";
import { Host } from "../../../models/Host";
import { Manager } from "../../../models/Manager";
import { PAT } from "../../../models/PAT";
import { TwitchUser } from "../../../models/TwitchUser";
import { TwitterUser } from "../../../models/TwitterUser";
import { User } from "../../../models/User";
import { UserActionsArgs } from "./args/UserActionsArgs";
import { UserBotArgs } from "./args/UserBotArgs";
import { UserCommandsArgs } from "./args/UserCommandsArgs";
import { UserHostsArgs } from "./args/UserHostsArgs";
import { UserManagerArgs } from "./args/UserManagerArgs";
import { UserPatArgs } from "./args/UserPatArgs";
import { UserTwitterUserArgs } from "./args/UserTwitterUserArgs";
export declare class UserRelationsResolver {
    actions(user: User, ctx: any, args: UserActionsArgs): Promise<Action[]>;
    Bot(user: User, ctx: any, args: UserBotArgs): Promise<Bot[]>;
    commands(user: User, ctx: any, args: UserCommandsArgs): Promise<Command[]>;
    discord(user: User, ctx: any): Promise<DiscordUser | null>;
    Hosts(user: User, ctx: any, args: UserHostsArgs): Promise<Host[]>;
    Manager(user: User, ctx: any, args: UserManagerArgs): Promise<Manager[]>;
    pat(user: User, ctx: any, args: UserPatArgs): Promise<PAT[]>;
    twitch(user: User, ctx: any): Promise<TwitchUser | null>;
    TwitterUser(user: User, ctx: any, args: UserTwitterUserArgs): Promise<TwitterUser[]>;
}

import { GraphQLResolveInfo } from "graphql";
import { AggregatePATArgs } from "./args/AggregatePATArgs";
import { CreatePATArgs } from "./args/CreatePATArgs";
import { DeleteManyPATArgs } from "./args/DeleteManyPATArgs";
import { DeletePATArgs } from "./args/DeletePATArgs";
import { FindFirstPATArgs } from "./args/FindFirstPATArgs";
import { FindManyPATArgs } from "./args/FindManyPATArgs";
import { FindUniquePATArgs } from "./args/FindUniquePATArgs";
import { UpdateManyPATArgs } from "./args/UpdateManyPATArgs";
import { UpdatePATArgs } from "./args/UpdatePATArgs";
import { UpsertPATArgs } from "./args/UpsertPATArgs";
import { PAT } from "../../../models/PAT";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregatePAT } from "../../outputs/AggregatePAT";
export declare class PATCrudResolver {
    pAT(ctx: any, args: FindUniquePATArgs): Promise<PAT | null>;
    findFirstPAT(ctx: any, args: FindFirstPATArgs): Promise<PAT | null>;
    pATS(ctx: any, args: FindManyPATArgs): Promise<PAT[]>;
    createPAT(ctx: any, args: CreatePATArgs): Promise<PAT>;
    deletePAT(ctx: any, args: DeletePATArgs): Promise<PAT | null>;
    updatePAT(ctx: any, args: UpdatePATArgs): Promise<PAT | null>;
    deleteManyPAT(ctx: any, args: DeleteManyPATArgs): Promise<AffectedRowsOutput>;
    updateManyPAT(ctx: any, args: UpdateManyPATArgs): Promise<AffectedRowsOutput>;
    upsertPAT(ctx: any, args: UpsertPATArgs): Promise<PAT>;
    aggregatePAT(ctx: any, info: GraphQLResolveInfo, args: AggregatePATArgs): Promise<AggregatePAT>;
}
